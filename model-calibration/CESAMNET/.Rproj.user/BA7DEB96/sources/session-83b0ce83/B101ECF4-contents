#Monkeypox_Baseline Model SEIR only, #Monkeypox_Baseline Model SEIR only, with 1/phi
#No demography
#with transmission, generated betah and estimated C.and scaling factor alpha
library(ggplot2)
library(tidyverse)
library(matrixStats)
library(extrafont)
library(lemon)
library(latex2exp)
library(outbreaks)
library(tidyverse)
library(rstan)
library(gridExtra)
#library(ggthemes)
#library(purrr)
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())
path  = "C:/Users/rabiu/OneDrive/Documents/R_code/Malaria/Bauchi_BBsec/"
setwd(path)

Bauchi_MalariaData <- read.csv("Bauchistate.csv")     # reads in a .csv file containing cases data from the beginning of the epidemic
cases1 = Bauchi_MalariaData$Total.Malaria.Cases
cases2 = cases1/1000
cases = round(cases2)
#Date <- as.Date(Bauchi_MalariaData$year[1:48])

K1= gammah+muh;
K2=muh+delta;
K3=sigmam+mum;
A=K1*K2*K3*mum*gammah*sigmam
B=K1*K2*K3*mum
R01= sqrt(A)*p*C*0.1/B
R0=R01/(1000*30)



# total count
Nh <- 7540663;
Nm =500;
gammah <- 1/7.5;#0.8799; incubation
tau <- 1/21; # #recovery
#p <- 0.24
#p=0.05
p=0.5;
#C <- 0.49 #0.15#0.11 #0.24,0.9
#C<-1.5
C=850;
epsilon = 0.05;
delta = 0.0004
alphah= 0.03; #chirov birth rate;
alpham=0.13;#chirov birth rate;
muh= 1/(65*30); #chirov 
mum=0.00002;
sigmam = 1/12;#0.51; #from Em to Im
# times
n_days <- length(cases) 
t <- seq(0, n_days, by = 1)
t0 = 0 

t <- t[-1]

#initial conditions
Sm0=Nm; Em0=0.5; Rm0=0.5; Eh0 = 0.5; Ih0=0.5;Rh0 = 0; 

#Eh0 = 25; Ih0=5; Rh0 = 25; 

Sh0=Nh;
y0 = c( Sh=Sh0,Eh = Eh0, Ih=Ih0, Rh = Rh0, Sm=Sm0, Em=Em0, Rm=Rm0)

# data for Stan
data_sir <- list(
  n_days = n_days,
  y0_vars = y0, 
  t0 = t0,
  ts = t,
  Nh = Nh,
  Nm = Nm,
  alphah=alphah,
  alpham=alpham,
  sigmam=sigmam,
  muh=muh,
  mum=mum,
  gammah=gammah,
  tau=tau,
  epsilon = epsilon,
  delta = delta,
  C = C,
  p=p,
  cases = cases,
  p_phi=c(5),
  a_1=c(1,20)
)

# number of MCMC steps
niter <- 50
model <- stan_model("Stan_sec.stan")


fit_seir <- sampling(model,
                     data = data_sir,
                     iter = niter,
                     chains = 4, 
                     seed = 0)



################### saving stan object ###################
saveRDS(fit_seir, file="StanOutput_weekly.RDS")
fit_seir_negbin <- readRDS("StanOutput_weekly.RDS")

# saving the sampling output
# Extracting the posteriors  from the output of the sampling and saving it in a file
Extract <- rstan::extract(fit_seir_negbin)
Post  <- data.frame(i0 = Extract$I0, alpha1 = Extract$alpha1, alpha2 = Extract$alpha2,
                    alpha3 = Extract$alpha3,
                    alpha4 = Extract$alpha4, alpha5 = Extract$alpha5, alpha6= Extract$alpha6,
                    alpha7 = Extract$alpha7,
                    alpha8 = Extract$alpha8, alpha9 = Extract$alpha9, alpha10= Extract$alpha10,
                    alpha11 = Extract$alpha11,
                    alpha12 = Extract$alpha12, alpha13 = Extract$alpha13, alpha14= Extract$alpha14,
                    alpha15 = Extract$alpha15, alpha16 = Extract$alpha16, alpha17= Extract$alpha17,
                    alpha18 = Extract$alpha18, alpha19 = Extract$alpha19, alpha20= Extract$alpha20,
                    alpha21 = Extract$alpha21, alpha22 = Extract$alpha22,
                    phi = Extract$phi)
write.table(Post, file="Par_PostDist_weekly.csv")

Post <- read.table(file= paste(path, "Par_PostDist_weekly.csv", sep="") )
pars=c("I0", "alpha1", "alpha2", "alpha3", "alpha4", "alpha5", "alpha6", "alpha7", "alpha8",
       "alpha9", "alpha10", "alpha11", "alpha12", "alpha13", "alpha14", "alpha15", "alpha16",
       "alpha17", "alpha18", "alpha19", "alpha20", "alpha21", "alpha22", "phi") 

densityplot <- stan_dens(fit_seir_negbin, pars = pars, separate_chains = TRUE)
densityplot
# saving the projecttion plot in a .png file
png(filename= paste(path, "Fit_Summary/UK_weekly_Densityplot.png", sep = ""))
plot(densityplot)
dev.off()

tplot <- traceplot(fit_seir_negbin, pars = pars)
tplot
# saving the projecttion plot in a .png file
png(filename= paste(path, "Fit_Summary/UK_weekly_traceplot.png", sep = ""))
plot(tplot)
dev.off()


#length(Date)

smr_pred <- cbind(as.data.frame(summary(
  fit_seir_negbin, pars = "pred_cases", probs = c(0.05,0.25, 0.5,0.75, 0.95))$summary), t, cases)
colnames(smr_pred) <- make.names(colnames(smr_pred)) # to remove % in the col names

# smr_pred <- smr_pred1 %>%
#   mutate(Date=Date)
# 
print(fit_seir_negbin, pars = pars)
stan_dens(fit_seir_negbin, pars = pars, separate_chains = TRUE)
traceplot(fit_seir_negbin, pars = pars)






weekly <- ggplot(smr_pred, mapping = aes(x = t)) +
  geom_ribbon(aes(ymin = X25., ymax = X75.), fill = "brown", alpha = 0.5) +
  geom_ribbon(aes(ymin = X5., ymax = X95.), fill = "brown", alpha = 0.5) +
  geom_line(mapping = aes(x = t, y = X50.), color = "blue", linewidth =1.5) +
  geom_point(mapping = aes(y = cases, x=t), size = 2.5) +
  labs(x = "Time (days)", y = "Reported cases") + theme_bw() + theme(text = element_text(size = 35)) +
  ggtitle("Bauchi") + # theme(plot.title = element_text(hjust = 0.5)) +
  theme(plot.title=element_text(hjust=0.05, vjust=0.7, margin=margin(t=50,b=-30), size=26)) + 
  theme(panel.grid.major = element_line(linewidth = 1, color = NULL),
        panel.grid.minor = element_line(linewidth = 1, color = NULL),
        panel.background = element_rect(colour = "black", linewidth=2, fill=NA), 
        axis.line = element_line(colour = "black")) 


weekly


png(filename= paste(path, "Fit_Summary/weekly.png", sep = ""))
plot(weekly)
dev.off()




